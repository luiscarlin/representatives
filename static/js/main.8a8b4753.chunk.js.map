{"version":3,"sources":["assets/capitol.svg","store/reducers/default-state.js","store/actionTypes/index.js","store/actionTypes/saga-actions.js","store/actionTypes/address-search-actions.js","store/actionTypes/representatives-actions.js","store/reducers/root-reducer.js","store/reducers/address-search-reducer.js","store/reducers/representatives-reducer.js","store/actionCreators/index.js","store/actionCreators/saga-action-creators.js","store/actionCreators/address-search-action-creators.js","store/actionCreators/representatives-action-creators.js","store/selectors/index.js","store/selectors/address-selectors.js","store/selectors/representatives-selectors.js","services/gapi-service.js","utils/representative-transformer.js","services/fetch-representatives-service.js","store/sagas/retrieve-representatives-saga.js","store/store.js","components/containers/address-search-section-container.js","components/presenters/address-search-section.js","components/presenters/social-media-icon-container.js","components/presenters/generic/card.js","components/containers/representatives-section-container.js","components/presenters/representatives-section.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","default_state","addressSearch","address","representatives","data","fetching","actionTypes","saga","RETRIEVE_REPRESENTATIVES","RESET_STATE","SET_ADDRESS","SET_REPRESENTATIVES","SET_FETCHING_REPRESENTATIVES","combineReducers","state","arguments","length","undefined","DEFAULT_STATE","action","type","Object","assign","value","objectSpread","actionCreators","retrieveRepresentatives","types","setAddress","setRepresentatives","setFetchingRepresentatives","selectors","getAddress","getRepresentatives","isFetching","getClient","window","gapi","client","Promise","resolve","initializeGapi","reject","script","document","createElement","src","onload","load","callback","setApiKey","onerror","timeout","ontimeout","body","appendChild","representative_transformer","console","log","offices","officials","divisions","transformedRepresentatives","map","rep","transformRepresentative","addOfficeToRepresentatives","keys","forEach","divisionName","_divisions$divisionNa","name","officeIndices","addDivisionsToRepresentatives","email","emails","lines","transformAddress","city","zip","party","phone","phones","website","urls","photoUrl","socialMedia","channels","ch","site","handle","id","filter","key","includes","office","indices","officialIndices","_ref","index","division","requestRepresentatves","path","params","then","request","response","catch","error","result","fetchRepresentatives","asyncToGenerator","regenerator_default","a","mark","_callee","formattedRepData","wrap","_context","prev","next","sent","status","abrupt","repDataTransformer","stop","this","_x","apply","runSaga","representativesData","take","put","select","race","call","delay","_marked","store_store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","retrieveRepresentativesSaga","Store","connect","dispatch","onSearchClick","react_default","react_google_autocomplete_default","className","onPlaceSelected","place","formatted_address","componentRestrictions","country","placeholder","autoFocus","presenters_social_media_icon_container","hrefValue","concat","href","target","rel","buildSocialMedia","generic_card","person","styledEmail","styledPhone","es_default","capitolSvg","loader","alt","cityStateZip","join","buildAddress","representativeCards","address_search_section_container","representatives_section_container","rootElement","getElementById","ReactDOM","render","es","App"],"mappings":"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","file":"static/js/main.8a8b4753.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/capitol.4ff364fc.svg\";","export default {\n  addressSearch: {\n    address: ''\n  },\n  representatives: {\n    data: [],\n    fetching: false\n  }\n}","import sagaActionTypes from './saga-actions'\nimport addressSearchActionTypes from './address-search-actions'\nimport representativesActionTypes from './representatives-actions'\n\nexport default {\n  saga: sagaActionTypes,\n  addressSearch: addressSearchActionTypes,\n  representatives: representativesActionTypes\n}","export default {\n  RETRIEVE_REPRESENTATIVES: 'SAGA@RETRIEVE_REPRESENTATIVES'\n}","export default {\n  RESET_STATE: 'ADDRESS_SEARCH@RESET_STATE',\n  SET_ADDRESS: 'ADDRESS_SEARCH@SET_ADDRESS'\n}\n","export default {\n  SET_REPRESENTATIVES: 'REPRESENTATIVES@SET_REPRESENTATIVES',\n  SET_FETCHING_REPRESENTATIVES: 'REPRESENTATIVES@SET_FETCHING_REPRESENTATIVES'\n}\n","import { combineReducers } from 'redux'\nimport addressSearchReducer from './address-search-reducer'\nimport representativesReducer from './representatives-reducer'\n\nexport default combineReducers({\n  addressSearch: addressSearchReducer,\n  representatives: representativesReducer\n})\n","import DEFAULT_STATE from './default-state'\nimport actionTypes from '../actionTypes'\n\nexport default (state = DEFAULT_STATE.addressSearch, action) => {\n  switch (action.type) {\n    case actionTypes.addressSearch.RESET_STATE:\n      return Object.assign({}, DEFAULT_STATE.addressSearch)\n    case actionTypes.addressSearch.SET_ADDRESS:\n      return Object.assign({}, state, { address: action.value })\n    default:\n      return state\n  }\n}\n","import DEFAULT_STATE from './default-state'\nimport actionTypes from '../actionTypes'\n\nexport default (state = DEFAULT_STATE.representatives, action) => {\n  switch (action.type) {\n    case actionTypes.representatives.SET_REPRESENTATIVES:\n      return { ...state, ...{ data: action.value }}\n    case actionTypes.representatives.SET_FETCHING_REPRESENTATIVES:\n      return { ...state, ...{ fetching: action.value }}\n    default:\n      return state\n  }\n}\n","import sagaActionCreators from './saga-action-creators'\nimport addressSearchActionCreators from './address-search-action-creators'\nimport representativesActionCreators from './representatives-action-creators'\n\nexport default {\n  saga: sagaActionCreators,\n  addressSearch: addressSearchActionCreators,\n  representatives: representativesActionCreators\n}\n","import types from '../actionTypes'\n\nconst retrieveRepresentatives = () => {\n  return {\n    type: types.saga.RETRIEVE_REPRESENTATIVES,\n  }\n}\n\nexport default { \n  retrieveRepresentatives \n}\n","import types from '../actionTypes'\n\nconst setAddress = (address) => {\n  return {\n    type: types.addressSearch.SET_ADDRESS,\n    value: address\n  }\n}\n\nexport default { \n  setAddress \n}\n","import types from '../actionTypes'\n\nconst setRepresentatives = (data) => {\n  return {\n    type: types.representatives.SET_REPRESENTATIVES,\n    value: data\n  }\n}\n\nconst setFetchingRepresentatives = (value) => {\n  return {\n    type: types.representatives.SET_FETCHING_REPRESENTATIVES,\n    value: value\n  }\n}\n\nexport default {\n  setRepresentatives,\n  setFetchingRepresentatives\n}\n","import addressSelectors from './address-selectors'\nimport representativesSelectors from './representatives-selectors'\n\nexport default {\n  address: addressSelectors,\n  representatives: representativesSelectors\n}\n","const getAddress = state => state.addressSearch.address\n\nexport default {\n  getAddress\n}\n","const getRepresentatives = state => state.representatives.data\n\nconst isFetching = state => state.representatives.fetching\n\nexport default {\n  getRepresentatives,\n  isFetching\n}\n","const API_KEY = 'AIzaSyC63iYNVwNtcZ5e_6-fr2X5kjlSANRPXXc'\n\nconst request = ({ path, params}) => {\n  return new Promise((resolve, reject) => {\n    getClient()\n      .then(client => client.request({ path, params }))\n      .then(response => resolve(response))\n      .catch(error => reject(error))\n  })\n}\n\nconst getClient = () => {\n  if (window.gapi && window.gapi.client) {\n    return Promise.resolve(window.gapi.client)\n  }\n\n  return initializeGapi()\n}\n\nconst initializeGapi = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\")\n    script.src = \"https://apis.google.com/js/client.js\"\n\n    script.onload = () => {\n      window.gapi.load('client', {\n        callback: () => {\n          window.gapi.client.setApiKey(API_KEY)\n          resolve(window.gapi.client)\n        },\n        onerror: () => {\n          reject('gapi client failed to load')\n        },\n        timeout: 5000,\n        ontimeout: () => {\n          reject('gapi client failed to load in 5 seconds')\n        }\n      })\n    }\n    document.body.appendChild(script)\n  })\n}\n\nexport { initializeGapi, request }","\nexport default (data) => {\n  console.log('raw representatives', data)\n\n  const { offices, officials, divisions } = data\n\n  let transformedRepresentatives = officials.map(rep => transformRepresentative(rep))\n\n  addOfficeToRepresentatives(offices, transformedRepresentatives)\n\n  Object.keys(divisions).forEach(divisionName => {\n    let {name, officeIndices} = divisions[divisionName]\n\n    addDivisionsToRepresentatives(name, officeIndices, transformedRepresentatives)\n  })\n\n  console.log('transformed', transformedRepresentatives)\n\n  return transformedRepresentatives\n}\n\nconst transformRepresentative = (rep) => ({\n  name: rep.name,\n  email: rep.emails ? rep.emails[0] : undefined,\n  address: rep.address ? {\n      lines: transformAddress(rep.address[0]),\n      city: rep.address[0].city,\n      state: rep.address[0].state,\n      zip: rep.address[0].zip\n  } : undefined,\n  party: rep.party,\n  phone: rep.phones ? rep.phones[0] : undefined,\n  website: rep.urls && rep.urls[0],\n  photoUrl: rep.photoUrl,\n  socialMedia: rep.channels && rep.channels.map(ch => ({ site: ch.type, handle: ch.id })),\n})\n\nconst transformAddress = (address) => {\n  return Object.keys(address)\n      .filter(key => key.includes('line'))\n      .map(key => address[key])\n}\n\nconst addOfficeToRepresentatives = (offices, representatives) => {\n    offices\n      .map(office => ({name: office.name, indices: office.officialIndices}))\n      .forEach(({name, indices}) => indices.forEach(index => representatives[index].office = name))\n}\n\nconst addDivisionsToRepresentatives = (name, officeIndices, representatives) => {\n    officeIndices = officeIndices || []\n\n    officeIndices.forEach(index => {\n        representatives[index].division = name\n    })\n}\n","import { request } from './gapi-service'\nimport repDataTransformer from '../utils/representative-transformer'\n\nconst ENDPOINT = '/civicinfo/v2/representatives'\n\nconst requestRepresentatves = (address) => {\n  return request({\n    'path': ENDPOINT,\n    'params': { 'address': address }\n  }).then((result) => {\n    return result\n  }).catch(() => {\n    return null\n  })\n}\n\nconst fetchRepresentatives = async (address) => {\n  const response = await requestRepresentatves(address)\n\n  if (!response || response.status !== 200) {\n    return []\n  }\n\n  const formattedRepData = repDataTransformer(response.result)\n\n  if (!formattedRepData) {\n    return []\n  }\n\n  return formattedRepData\n}\n\nexport default fetchRepresentatives","import { take, call, put, select, race } from 'redux-saga/effects'\nimport { delay } from 'redux-saga'\nimport types from '../actionTypes'\nimport actionCreators from '../actionCreators'\nimport selectors from '../selectors'\nimport fetchRepresentatives from '../../services/fetch-representatives-service'\n\nexport default function * runSaga () {\n  while (true) {\n    yield take(types.saga.RETRIEVE_REPRESENTATIVES)\n\n    yield put(actionCreators.representatives.setFetchingRepresentatives(true))\n\n    const address = yield select(selectors.address.getAddress)\n\n    const { representativesData } = yield race({\n      representativesData: call(fetchRepresentatives, address),\n      timeout: call(delay, 20000)\n    })\n\n    if (representativesData.length === 0) {\n    yield put(actionCreators.representatives.setFetchingRepresentatives(false))\n      continue\n    }\n\n    yield put(actionCreators.representatives.setRepresentatives(representativesData))\n\n    yield put(actionCreators.representatives.setFetchingRepresentatives(false))\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers/root-reducer'\nimport retrieveRepresentativesSaga from './sagas/retrieve-representatives-saga'\n\nconst initialize = () => {\n  const sagaMiddleware = createSagaMiddleware()\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(sagaMiddleware)\n    )\n  )\n\n  sagaMiddleware.run(retrieveRepresentativesSaga)\n\n  window.Store = store\n\n  return store\n}\n\nexport default { initialize }\n","import { connect } from 'react-redux'\nimport addressSearchSection from '../presenters/address-search-section'\nimport actionCreators from '../../store/actionCreators'\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchClick: (address) => {\n    dispatch(actionCreators.addressSearch.setAddress(address))\n    dispatch(actionCreators.saga.retrieveRepresentatives())\n  }\n})\n\nexport default connect(null, mapDispatchToProps)(addressSearchSection)","import React from 'react'\nimport Autocomplete from 'react-google-autocomplete';\nimport './address-search-section.scss'\n\nexport default ({ onSearchClick }) =>  (\n  <Autocomplete\n    className={'search-box'}\n    onPlaceSelected={(place) => onSearchClick(place.formatted_address) }\n    types={['geocode']}\n    componentRestrictions={{country: \"us\"}}\n    placeholder={'Search with your address...'}\n    autoFocus={true}\n  />\n)\n","import React from 'react'\nimport './social-media-icon-container.scss'\n\nexport default ({socialMedia}) => {\n\n  const buildSocialMedia = () => {\n    const socialMediaList = socialMedia\n\n    if (!socialMediaList) {\n      return\n    }\n    return socialMediaList.map((socialMedia, index) => {\n      let hrefValue\n\n      switch(socialMedia.site) {\n        case \"GooglePlus\":\n          hrefValue = `https://plus.google.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-google-plus-square' /></a>\n        case \"Twitter\":\n          hrefValue = `https://twitter.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-twitter-square' /></a>\n        case \"Facebook\":\n          hrefValue = `https://facebook.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-facebook-square' /></a>\n        case \"YouTube\":\n          hrefValue = `https://youtube.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-youtube-square' /></a>\n        default:\n          console.log('Social media', socialMedia.name, 'not recognized')\n          return <span></span>\n      }\n    })\n  }\n\n  return (\n    <div className='social-media'>\n     { buildSocialMedia() }\n    </div>\n  )\n}","import React from 'react'\nimport './card.scss'\nimport SocialMediaIconContainer from '../social-media-icon-container'\nimport capitolSvg from '../../../assets/capitol.svg'\nimport Img from 'react-image'\n\nexport default ({ person }) => {\n\n  const buildAddress = () => {\n    const { address } = person\n    const cityStateZip = `${address.city} ${address.state}, ${address.zip}`\n\n    return (\n      <div className='address'>\n        <div className='address-lines'>{person.address.lines.join(',')}</div>\n        <div className='address-city-state-zip'>{cityStateZip}</div>\n      </div>\n    )\n  }\n\n  const styledEmail =\n    <div className='email'>\n      <a href={`mailto:${person.email}`}>{person.email}</a>\n    </div>\n\n  const styledPhone =\n    <div className='phone'>\n      <a href={`tel:+1${person.phone}`}>{person.phone}</a>\n    </div>\n\n  return (\n    <div className='card slide-up'>\n      <figure className='image'>\n        <a href={person.website || undefined} target='_blank' rel=\"noopener noreferrer\">\n          <Img src={[person.photoUrl, capitolSvg]} loader={<img src={capitolSvg} alt={person.name}/>}/>\n        </a>\n      </figure>\n      <figcaption className='caption'>\n        <div className='info-container'>\n          <div className='name'>{person.name}</div>\n          <div className='office'>{person.office}</div>\n          <div className='party'>{person.party}</div>\n          { person.email && styledEmail }\n          { person.phone && styledPhone }\n          { person.address && buildAddress() }\n        </div>\n        <SocialMediaIconContainer socialMedia={person.socialMedia} />\n      </figcaption>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport representativesSection from '../presenters/representatives-section'\nimport selectors from '../../store/selectors'\n\nconst mapStateToProps = state => ({\n  representatives: selectors.representatives.getRepresentatives(state),\n  isFetching: selectors.representatives.isFetching(state)\n})\n\nexport default connect(mapStateToProps)(representativesSection)\n","import React from 'react'\nimport Card from './generic/card'\nimport './representatives-section.scss'\n\nconst representativeCards = (representatives) => (\n  representatives.map((rep, index) => <Card person={rep} key={index} />)\n)\n\nexport default ({ representatives, isFetching }) => (\n  <div className='representatives-section'>\n    { isFetching && <div className=\"loader\">Loading...</div> }\n    { !isFetching && representativeCards(representatives) }\n  </div>\n)","import React from 'react'\nimport { connect } from 'react-redux'\nimport selectors from '../store/selectors'\nimport AddressSearchSection from './containers/address-search-section-container'\nimport RepresentativesSection from './containers/representatives-section-container'\nimport './app.scss'\n\nconst app = ({ address }) => {\n  return <div className='app'>\n    <div className='page'>\n      <div className={address ? 'title top' : 'title'}>Find Your Representatives</div>\n      <div className='address-search-wrapper'>\n        <AddressSearchSection/>\n      </div>\n      <RepresentativesSection/>\n    </div>\n  </div>\n}\nconst mapStateToProps = state => ({\n  address: selectors.address.getAddress(state)\n})\n\nexport default connect(mapStateToProps)(app)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport Store from './store/store'\nimport './index.scss'\nimport App from './components/App'\n// import registerServiceWorker from './registerServiceWorker'\n\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <Provider store={Store.initialize()}>\n    <App />\n  </Provider>,\n  rootElement\n)\n\n// registerServiceWorker()\n"],"sourceRoot":""}