{"version":3,"sources":["assets/capitol.svg","store/reducers/default-state.js","store/actionTypes/index.js","store/actionTypes/saga-actions.js","store/actionTypes/address-search-actions.js","store/actionTypes/representatives-actions.js","store/reducers/root-reducer.js","store/reducers/address-search-reducer.js","store/reducers/representatives-reducer.js","store/actionCreators/index.js","store/actionCreators/saga-action-creators.js","store/actionCreators/address-search-action-creators.js","store/actionCreators/representatives-action-creators.js","store/selectors/index.js","store/selectors/address-selectors.js","store/selectors/representatives-selectors.js","services/gapi-service.js","utils/representative-transformer.js","services/fetch-representatives-service.js","store/sagas/retrieve-representatives-saga.js","store/store.js","components/containers/address-search-section-container.js","components/presenters/address-search-section.js","components/presenters/social-media-icon-container.js","components/presenters/generic/card.js","components/containers/representatives-section-container.js","components/presenters/representatives-section.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","default_state","addressSearch","address","representatives","data","fetching","actionTypes","saga","RETRIEVE_REPRESENTATIVES","RESET_STATE","SET_ADDRESS","SET_REPRESENTATIVES","SET_FETCHING_REPRESENTATIVES","combineReducers","state","arguments","length","undefined","DEFAULT_STATE","action","type","Object","assign","value","objectSpread","actionCreators","retrieveRepresentatives","types","setAddress","setRepresentatives","setFetchingRepresentatives","selectors","getAddress","getRepresentatives","isFetching","getClient","window","gapi","client","Promise","resolve","initializeGapi","reject","script","document","createElement","src","onload","load","callback","setApiKey","onerror","timeout","ontimeout","body","appendChild","representative_transformer","console","log","offices","officials","divisions","transformed","map","rep","name","email","emails","lines","keys","forEach","key","includes","push","addressLinesTransform","city","zip","party","phone","phones","website","urls","photoUrl","socialMedia","channels","ch","site","handle","id","office","officialIndices","index","divisionIndex","currentDivision","officeIndices","division","requestRepresentatves","_ref","path","params","then","request","response","catch","error","result","fetchRepresentatives","asyncToGenerator","regenerator_default","a","mark","_callee","formattedRepData","wrap","_context","prev","next","sent","status","abrupt","repDataTransformer","stop","this","_x","apply","runSaga","representativesData","take","put","select","race","call","delay","_marked","store_store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","retrieveRepresentativesSaga","Store","connect","dispatch","onSearchClick","react_default","react_google_autocomplete_default","className","onPlaceSelected","place","formatted_address","componentRestrictions","country","placeholder","autoFocus","presenters_social_media_icon_container","hrefValue","concat","href","target","rel","buildSocialMedia","generic_card","person","styledEmail","styledPhone","es_default","capitolSvg","loader","alt","cityStateZip","join","buildAddress","representativeCards","address_search_section_container","representatives_section_container","Boolean","location","hostname","match","rootElement","getElementById","ReactDOM","render","es","App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5023248f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/capitol.4ff364fc.svg\";","export default {\n  addressSearch: {\n    address: ''\n  },\n  representatives: {\n    data: [],\n    fetching: false\n  }\n}","import sagaActionTypes from './saga-actions'\nimport addressSearchActionTypes from './address-search-actions'\nimport representativesActionTypes from './representatives-actions'\n\nexport default {\n  saga: sagaActionTypes,\n  addressSearch: addressSearchActionTypes,\n  representatives: representativesActionTypes\n}","export default {\n  RETRIEVE_REPRESENTATIVES: 'SAGA@RETRIEVE_REPRESENTATIVES'\n}","export default {\n  RESET_STATE: 'ADDRESS_SEARCH@RESET_STATE',\n  SET_ADDRESS: 'ADDRESS_SEARCH@SET_ADDRESS'\n}\n","export default {\n  SET_REPRESENTATIVES: 'REPRESENTATIVES@SET_REPRESENTATIVES',\n  SET_FETCHING_REPRESENTATIVES: 'REPRESENTATIVES@SET_FETCHING_REPRESENTATIVES'\n}\n","import { combineReducers } from 'redux'\nimport addressSearchReducer from './address-search-reducer'\nimport representativesReducer from './representatives-reducer'\n\nexport default combineReducers({\n  addressSearch: addressSearchReducer,\n  representatives: representativesReducer\n})\n","import DEFAULT_STATE from './default-state'\nimport actionTypes from '../actionTypes'\n\nexport default (state = DEFAULT_STATE.addressSearch, action) => {\n  switch (action.type) {\n    case actionTypes.addressSearch.RESET_STATE:\n      return Object.assign({}, DEFAULT_STATE.addressSearch)\n    case actionTypes.addressSearch.SET_ADDRESS:\n      return Object.assign({}, state, { address: action.value })\n    default:\n      return state\n  }\n}\n","import DEFAULT_STATE from './default-state'\nimport actionTypes from '../actionTypes'\n\nexport default (state = DEFAULT_STATE.representatives, action) => {\n  switch (action.type) {\n    case actionTypes.representatives.SET_REPRESENTATIVES:\n      return { ...state, ...{ data: action.value }}\n    case actionTypes.representatives.SET_FETCHING_REPRESENTATIVES:\n      return { ...state, ...{ fetching: action.value }}\n    default:\n      return state\n  }\n}\n","import sagaActionCreators from './saga-action-creators'\nimport addressSearchActionCreators from './address-search-action-creators'\nimport representativesActionCreators from './representatives-action-creators'\n\nexport default {\n  saga: sagaActionCreators,\n  addressSearch: addressSearchActionCreators,\n  representatives: representativesActionCreators\n}\n","import types from '../actionTypes'\n\nconst retrieveRepresentatives = () => {\n  return {\n    type: types.saga.RETRIEVE_REPRESENTATIVES,\n  }\n}\n\nexport default { \n  retrieveRepresentatives \n}\n","import types from '../actionTypes'\n\nconst setAddress = (address) => {\n  return {\n    type: types.addressSearch.SET_ADDRESS,\n    value: address\n  }\n}\n\nexport default { \n  setAddress \n}\n","import types from '../actionTypes'\n\nconst setRepresentatives = (data) => {\n  return {\n    type: types.representatives.SET_REPRESENTATIVES,\n    value: data\n  }\n}\n\nconst setFetchingRepresentatives = (value) => {\n  return {\n    type: types.representatives.SET_FETCHING_REPRESENTATIVES,\n    value: value\n  }\n}\nexport default {\n  setRepresentatives,\n  setFetchingRepresentatives\n}\n","import addressSelectors from './address-selectors'\nimport representativesSelectors from './representatives-selectors'\n\nexport default {\n  address: addressSelectors,\n  representatives: representativesSelectors\n}\n","const getAddress = state => state.addressSearch.address\n\nexport default {\n  getAddress\n}\n","const getRepresentatives = state => state.representatives.data\nconst isFetching = state => state.representatives.fetching\nexport default {\n  getRepresentatives,\n  isFetching\n}\n","const API_KEY = 'AIzaSyC63iYNVwNtcZ5e_6-fr2X5kjlSANRPXXc'\n\nconst request = ({ path, params}) => {\n  return new Promise((resolve, reject) => {\n    getClient()\n      .then(client => client.request({ path, params }))\n      .then(response => resolve(response))\n      .catch(error => reject(error))\n  })\n}\n\nconst getClient = () => {\n  if (window.gapi && window.gapi.client) {\n    return Promise.resolve(window.gapi.client)\n  }\n\n  return initializeGapi()\n}\n\nconst initializeGapi = () => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\")\n    script.src = \"https://apis.google.com/js/client.js\"\n\n    script.onload = () => {\n      window.gapi.load('client', {\n        callback: () => {\n          window.gapi.client.setApiKey(API_KEY)\n          resolve(window.gapi.client)\n        },\n        onerror: () => {\n          reject('gapi client failed to load')\n        },\n        timeout: 5000,\n        ontimeout: () => {\n          reject('gapi client failed to load in 5 seconds')\n        }\n      })\n    }\n    document.body.appendChild(script)\n  })\n}\n\nexport { initializeGapi, request }","\nexport default (data) => {\n  console.log('raw representatives', data)\n  const { offices, officials, divisions } = data\n\n  let addressLinesTransform = address => {\n    let lines = []\n    Object.keys(address).forEach(key => {\n      if (key.includes('line')) {\n        lines.push(address[key])\n      }\n    })\n    return lines\n  }\n\n  let transformed = officials.map(rep => {\n    return {\n      name: rep.name,\n      email: rep.emails ? rep.emails[0] : undefined,\n      address: rep.address ? {\n        lines: addressLinesTransform(rep.address[0]),\n        city: rep.address[0].city,\n        state: rep.address[0].state,\n        zip: rep.address[0].zip\n      } : undefined,\n      party: rep.party,\n      phone: rep.phones ? rep.phones[0] : undefined,\n      website: rep.urls && rep.urls[0],\n      photoUrl: rep.photoUrl,\n      socialMedia: rep.channels && rep.channels.map(ch => ({ site: ch.type, handle: ch.id }))\n    }\n  })\n\n  offices.forEach(office => {\n    office.officialIndices.forEach(index => {\n      transformed[index].office = office.name\n    })\n  })\n\n  Object.keys(divisions).forEach(divisionIndex => {\n    let currentDivision = divisions[divisionIndex]\n    if(currentDivision.officeIndices) {\n      currentDivision.officeIndices.forEach(index => {\n        transformed[index].division = currentDivision.name\n      })\n    }\n   \n  })\n\n  console.log('transformed', transformed)\n\n  return transformed\n}\n","import { request } from './gapi-service'\nimport repDataTransformer from '../utils/representative-transformer'\n\nconst ENDPOINT = '/civicinfo/v2/representatives'\n\nconst requestRepresentatves = (address) => {\n  return request({\n    'path': ENDPOINT,\n    'params': { 'address': address }\n  }).then((result) => {\n    return result\n  }).catch(() => {\n    return null\n  })\n}\n\nconst fetchRepresentatives = async (address) => {\n  const response = await requestRepresentatves(address)\n\n  if (!response || response.status !== 200) {\n    return []\n  }\n\n  const formattedRepData = repDataTransformer(response.result)\n\n  if (!formattedRepData) {\n    return []\n  }\n\n  return formattedRepData\n}\n\nexport default fetchRepresentatives","import { take, call, put, select, race } from 'redux-saga/effects'\nimport { delay } from 'redux-saga'\nimport types from '../actionTypes'\nimport actionCreators from '../actionCreators'\nimport selectors from '../selectors'\nimport fetchRepresentatives from '../../services/fetch-representatives-service'\n\nexport default function * runSaga () {\n  while (true) {\n    yield take(types.saga.RETRIEVE_REPRESENTATIVES)\n\n    yield put(actionCreators.representatives.setFetchingRepresentatives(true))\n\n    const address = yield select(selectors.address.getAddress)\n\n    const { representativesData } = yield race({\n      representativesData: call(fetchRepresentatives, address),\n      timeout: call(delay, 20000)\n    })\n\n    if (representativesData.length === 0) {\n    yield put(actionCreators.representatives.setFetchingRepresentatives(false))\n      continue\n    }\n\n    yield put(actionCreators.representatives.setRepresentatives(representativesData))\n\n    yield put(actionCreators.representatives.setFetchingRepresentatives(false))\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers/root-reducer'\nimport retrieveRepresentativesSaga from './sagas/retrieve-representatives-saga'\n\nconst initialize = () => {\n  const sagaMiddleware = createSagaMiddleware()\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(sagaMiddleware)\n    )\n  )\n\n  sagaMiddleware.run(retrieveRepresentativesSaga)\n\n  window.Store = store\n\n  return store\n}\n\nexport default { initialize }\n","import { connect } from 'react-redux'\nimport addressSearchSection from '../presenters/address-search-section'\nimport actionCreators from '../../store/actionCreators'\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchClick: (address) => {\n    dispatch(actionCreators.addressSearch.setAddress(address))\n    dispatch(actionCreators.saga.retrieveRepresentatives())\n  }\n})\n\nexport default connect(null, mapDispatchToProps)(addressSearchSection)","import React from 'react'\nimport Autocomplete from 'react-google-autocomplete';\nimport './address-search-section.scss'\n\nexport default ({ onSearchClick }) =>  (\n  <Autocomplete\n    className={'search-box'}\n    onPlaceSelected={(place) => onSearchClick(place.formatted_address) }\n    types={['geocode']}\n    componentRestrictions={{country: \"us\"}}\n    placeholder={'Search with your address...'}\n    autoFocus={true}\n  />\n)\n","import React from 'react'\nimport './social-media-icon-container.scss'\n\nexport default ({socialMedia}) => {\n\n  const buildSocialMedia = () => {\n    const socialMediaList = socialMedia\n\n    if (!socialMediaList) {\n      return\n    }\n    return socialMediaList.map((socialMedia, index) => {\n      let hrefValue\n\n      switch(socialMedia.site) {\n        case \"GooglePlus\":\n          hrefValue = `https://plus.google.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-google-plus-square' /></a>\n        case \"Twitter\":\n          hrefValue = `https://twitter.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-twitter-square' /></a>\n        case \"Facebook\":\n          hrefValue = `https://facebook.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-facebook-square' /></a>\n        case \"YouTube\":\n          hrefValue = `https://youtube.com/${socialMedia.handle}`\n          return <a href={hrefValue} key={index} target='_blank' rel=\"noopener noreferrer\"><i className='fab fa-youtube-square' /></a>\n        default:\n          console.log('Social media', socialMedia.name, 'not recognized')\n          return <span></span>\n      }\n    })\n  }\n\n  return (\n    <div className='social-media'>\n     { buildSocialMedia() }\n    </div>\n  )\n}","import React from 'react'\nimport './card.scss'\nimport SocialMediaIconContainer from '../social-media-icon-container'\nimport capitolSvg from '../../../assets/capitol.svg'\nimport Img from 'react-image'\n\nexport default ({ person }) => {\n\n  const buildAddress = () => {\n    const { address } = person\n    const cityStateZip = `${address.city} ${address.state}, ${address.zip}`\n\n    return (\n      <div className='address'>\n        <div className='address-lines'>{person.address.lines.join(',')}</div>\n        <div className='address-city-state-zip'>{cityStateZip}</div>\n      </div>\n    )\n  }\n\n  const styledEmail =\n    <div className='email'>\n      <a href={`mailto:${person.email}`}>{person.email}</a>\n    </div>\n\n  const styledPhone =\n    <div className='phone'>\n      <a href={`tel:+1${person.phone}`}>{person.phone}</a>\n    </div>\n\n  return (\n    <div className='card slide-up'>\n      <figure className='image'>\n        <a href={person.website || undefined} target='_blank' rel=\"noopener noreferrer\">\n          <Img src={[person.photoUrl, capitolSvg]} loader={<img src={capitolSvg} alt={person.name}/>}/>\n        </a>\n      </figure>\n      <figcaption className='caption'>\n        <div className='info-container'>\n          <div className='name'>{person.name}</div>\n          <div className='office'>{person.office}</div>\n          <div className='party'>{person.party}</div>\n          { person.email && styledEmail }\n          { person.phone && styledPhone }\n          { person.address && buildAddress() }\n        </div>\n        <SocialMediaIconContainer socialMedia={person.socialMedia} />\n      </figcaption>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport representativesSection from '../presenters/representatives-section'\nimport selectors from '../../store/selectors'\n\nconst mapStateToProps = state => ({\n  representatives: selectors.representatives.getRepresentatives(state),\n  isFetching: selectors.representatives.isFetching(state)\n})\n\nexport default connect(mapStateToProps)(representativesSection)\n","import React from 'react'\nimport Card from './generic/card'\nimport './representatives-section.scss'\n\nconst representativeCards = (representatives) => (\n  representatives.map((rep, index) => <Card person={rep} key={index} />)\n)\n\nexport default ({ representatives, isFetching }) => (\n  <div className='representatives-section'>\n     { isFetching && <div className=\"loader\">Loading...</div> }\n     { !isFetching && representativeCards(representatives) }\n  </div>\n)","import React from 'react'\nimport { connect } from 'react-redux'\nimport selectors from '../store/selectors'\nimport AddressSearchSection from './containers/address-search-section-container'\nimport RepresentativesSection from './containers/representatives-section-container'\nimport './app.scss'\n\nconst app = ({ address }) => (\n  <div className='app'>\n    <div className='page'>\n      <div className={address ? 'title top' : 'title'}>Find Your Representatives</div>\n      <div className='address-search-wrapper'>\n        <AddressSearchSection/>\n      </div>\n      <RepresentativesSection/>\n    </div>\n  </div>\n)\n\nconst mapStateToProps = state => ({\n  address: selectors.address.getAddress(state)\n})\n\nexport default connect(mapStateToProps)(app)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport Store from './store/store'\nimport './index.scss'\nimport App from './components/App'\nimport { unregister } from './registerServiceWorker';\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n  <Provider store={Store.initialize()}>\n    <App />\n  </Provider>,\n  rootElement\n)\n\nunregister()\n"],"sourceRoot":""}